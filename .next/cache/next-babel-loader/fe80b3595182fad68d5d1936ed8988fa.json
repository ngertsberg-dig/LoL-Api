{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../components/Layout';\nimport SummonerSearch from '../components/SummonerSearch';\nimport Summoner from '../components/Summoner';\nexport default class Index extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      currentSummoner: null\n    });\n\n    _defineProperty(this, \"getSummonerByName\", async event => {\n      this.setState({\n        currentSummoner: null\n      });\n      event.preventDefault();\n      const summonerNameToGet = document.querySelector(\"#summonerNameSearch\").value;\n      const apiRequest = await fetch('/api/user/getSummonerByName', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/js   on',\n          'Content-Type': 'application/json'\n        },\n        body: _JSON$stringify({\n          summonerName: summonerNameToGet\n        })\n      });\n      const apiResponse = await apiRequest.json();\n\n      if (apiResponse.summoner.status) {\n        const statusCode = apiResponse.summoner.status.status_code;\n        this.setState({\n          currentSummoner: null\n        });\n        alert(apiResponse.summoner.status.message);\n      } else {\n        this.setState({\n          currentSummoner: apiResponse.summoner\n        });\n      }\n    });\n  }\n\n  render() {\n    const summoner = this.state.currentSummoner;\n    return __jsx(Layout, {\n      pageView: \"homepage\",\n      pageTitle: \"Homepage\"\n    }, __jsx(SummonerSearch, {\n      searchSummoner: event => this.getSummonerByName(event)\n    }), __jsx(Summoner, {\n      summoner: summoner\n    }));\n  }\n\n}","map":{"version":3,"sources":["/home/vagrant/apps/league/pages/index.js"],"names":["React","fetch","Layout","SummonerSearch","Summoner","Index","Component","currentSummoner","event","setState","preventDefault","summonerNameToGet","document","querySelector","value","apiRequest","method","headers","body","summonerName","apiResponse","json","summoner","status","statusCode","status_code","alert","message","render","state","getSummonerByName"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,eAAe,MAAMC,KAAN,SAAoBL,KAAK,CAACM,SAA1B,CAAmC;AAAA;AAAA;;AAAA,mCACtC;AACJC,MAAAA,eAAe,EAAE;AADb,KADsC;;AAAA,+CAI1B,MAAOC,KAAP,IAAgB;AAChC,WAAKC,QAAL,CAAc;AAAEF,QAAAA,eAAe,EAAE;AAAnB,OAAd;AACAC,MAAAA,KAAK,CAACE,cAAN;AACA,YAAMC,iBAAiB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,qBAAvB,EAA8CC,KAAxE;AACA,YAAMC,UAAU,GAAG,MAAMd,KAAK,CAAC,6BAAD,EAA+B;AACzDe,QAAAA,MAAM,EAAE,MADiD;AAEzDC,QAAAA,OAAO,EAAE;AACL,oBAAU,qBADL;AAEL,0BAAgB;AAFX,SAFgD;AAMzDC,QAAAA,IAAI,EAAE,gBAAe;AAACC,UAAAA,YAAY,EAAER;AAAf,SAAf;AANmD,OAA/B,CAA9B;AAQA,YAAMS,WAAW,GAAG,MAAML,UAAU,CAACM,IAAX,EAA1B;;AACA,UAAGD,WAAW,CAACE,QAAZ,CAAqBC,MAAxB,EAA+B;AAC3B,cAAMC,UAAU,GAAGJ,WAAW,CAACE,QAAZ,CAAqBC,MAArB,CAA4BE,WAA/C;AACA,aAAKhB,QAAL,CAAc;AAAEF,UAAAA,eAAe,EAAE;AAAnB,SAAd;AACAmB,QAAAA,KAAK,CAACN,WAAW,CAACE,QAAZ,CAAqBC,MAArB,CAA4BI,OAA7B,CAAL;AACH,OAJD,MAIK;AACD,aAAKlB,QAAL,CAAc;AACVF,UAAAA,eAAe,EAAEa,WAAW,CAACE;AADnB,SAAd;AAGH;AACJ,KA1B6C;AAAA;;AA6B9CM,EAAAA,MAAM,GAAE;AACJ,UAAMN,QAAQ,GAAG,KAAKO,KAAL,CAAWtB,eAA5B;AACA,WACI,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAG,UAAnB;AAA8B,MAAA,SAAS,EAAG;AAA1C,OACI,MAAC,cAAD;AAAgB,MAAA,cAAc,EAAKC,KAAD,IAAW,KAAKsB,iBAAL,CAAuBtB,KAAvB;AAA7C,MADJ,EAEI,MAAC,QAAD;AAAU,MAAA,QAAQ,EAAIc;AAAtB,MAFJ,CADJ;AAMH;;AArC6C","sourcesContent":["import React from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../components/Layout';\r\nimport SummonerSearch from '../components/SummonerSearch';\r\nimport Summoner from '../components/Summoner';\r\nexport default class Index extends React.Component{\r\n    state = {\r\n        currentSummoner: null\r\n    }\r\n    getSummonerByName = async (event) =>{\r\n        this.setState({ currentSummoner: null});\r\n        event.preventDefault();\r\n        const summonerNameToGet = document.querySelector(\"#summonerNameSearch\").value;\r\n        const apiRequest = await fetch('/api/user/getSummonerByName',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/js   on',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({summonerName: summonerNameToGet })\r\n        })\r\n        const apiResponse = await apiRequest.json();\r\n        if(apiResponse.summoner.status){\r\n            const statusCode = apiResponse.summoner.status.status_code;\r\n            this.setState({ currentSummoner: null});\r\n            alert(apiResponse.summoner.status.message);\r\n        }else{\r\n            this.setState({\r\n                currentSummoner: apiResponse.summoner\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        const summoner = this.state.currentSummoner;\r\n        return(\r\n            <Layout pageView = 'homepage' pageTitle = 'Homepage'>\r\n                <SummonerSearch searchSummoner = {(event) => this.getSummonerByName(event)} />\r\n                <Summoner summoner = {summoner} />\r\n            </Layout>\r\n        )\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}