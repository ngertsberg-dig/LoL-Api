{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport MatchData from './MatchData';\n\nclass SummonerMatch extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      personID: null,\n      person: null,\n      champion: null\n    });\n  }\n\n  componentDidMount() {\n    const {\n      match,\n      summonerID\n    } = this.props;\n    let personID = null;\n    let champion = null;\n    match.participantIdentities.map(person => {\n      if (person.player.accountId === summonerID) {\n        personID = person.participantId;\n      }\n    });\n    let champID = match.participants[personID - 1].championId;\n    const championData = this.props.matchData;\n\n    _Object$keys(championData).forEach(champ => {\n      const champLoopID = championData[champ].key;\n\n      if (_parseInt(champLoopID) === _parseInt(champID)) {\n        champion = championData[champ];\n        return;\n      }\n    });\n\n    this.setState({\n      personID: personID,\n      person: match.participants[personID - 1],\n      champion: champion\n    });\n  }\n\n  render() {\n    const {\n      match,\n      summonerID\n    } = this.props;\n    let matchWon = false;\n    let matchClass = ['match'];\n    let championData = null;\n\n    if (this.state.person !== null) {\n      match.teams.forEach(team => {\n        if (team.teamId === this.state.person.teamId) {\n          if (team.win !== 'Fail') {\n            matchWon = true;\n            matchClass.push('match-won');\n          } else {\n            matchClass.push('match-lost');\n          }\n        }\n      });\n      championData = __jsx(MatchData, {\n        person: this.state.person,\n        champion: this.state.champion\n      });\n      console.log(match);\n    }\n\n    return __jsx(\"div\", {\n      className: matchClass.join(' ')\n    }, championData);\n  }\n\n}\n\nexport default SummonerMatch;","map":{"version":3,"sources":["/home/vagrant/apps/league/components/summoner-profile/summoner-matches/single-match/SummonerMatch.js"],"names":["React","useState","MatchData","SummonerMatch","Component","personID","person","champion","componentDidMount","match","summonerID","props","participantIdentities","map","player","accountId","participantId","champID","participants","championId","championData","matchData","forEach","champ","champLoopID","key","setState","render","matchWon","matchClass","state","teams","team","teamId","win","push","console","log","join"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AACA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;;AAAA,mCACjC;AACHC,MAAAA,QAAQ,EAAE,IADP;AAEHC,MAAAA,MAAM,EAAE,IAFL;AAGHC,MAAAA,QAAQ,EAAE;AAHP,KADiC;AAAA;;AAMxCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKC,KAAnC;AACA,QAAIN,QAAQ,GAAG,IAAf;AACA,QAAIE,QAAQ,GAAG,IAAf;AACAE,IAAAA,KAAK,CAACG,qBAAN,CAA4BC,GAA5B,CAAiCP,MAAD,IAAW;AACvC,UAAGA,MAAM,CAACQ,MAAP,CAAcC,SAAd,KAA4BL,UAA/B,EAA0C;AACtCL,QAAAA,QAAQ,GAAGC,MAAM,CAACU,aAAlB;AACH;AACJ,KAJD;AAKA,QAAIC,OAAO,GAAGR,KAAK,CAACS,YAAN,CAAmBb,QAAQ,GAAG,CAA9B,EAAiCc,UAA/C;AACA,UAAMC,YAAY,GAAG,KAAKT,KAAL,CAAWU,SAAhC;;AAEA,iBAAYD,YAAZ,EAA0BE,OAA1B,CAAmCC,KAAD,IAAS;AACvC,YAAMC,WAAW,GAAGJ,YAAY,CAACG,KAAD,CAAZ,CAAoBE,GAAxC;;AACA,UAAG,UAASD,WAAT,MAA0B,UAASP,OAAT,CAA7B,EAA+C;AAC3CV,QAAAA,QAAQ,GAAGa,YAAY,CAACG,KAAD,CAAvB;AACA;AACH;AACJ,KAND;;AAOA,SAAKG,QAAL,CAAc;AAAErB,MAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,MAAAA,MAAM,EAAEG,KAAK,CAACS,YAAN,CAAmBb,QAAQ,GAAG,CAA9B,CAA9B;AAA+DE,MAAAA,QAAQ,EAAEA;AAAzE,KAAd;AACH;;AACDoB,EAAAA,MAAM,GAAE;AACJ,UAAM;AAAElB,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKC,KAAnC;AACA,QAAIiB,QAAQ,GAAG,KAAf;AACA,QAAIC,UAAU,GAAG,CAAC,OAAD,CAAjB;AACA,QAAIT,YAAY,GAAG,IAAnB;;AACA,QAAG,KAAKU,KAAL,CAAWxB,MAAX,KAAsB,IAAzB,EAA8B;AAC1BG,MAAAA,KAAK,CAACsB,KAAN,CAAYT,OAAZ,CAAqBU,IAAD,IAAU;AAC1B,YAAGA,IAAI,CAACC,MAAL,KAAgB,KAAKH,KAAL,CAAWxB,MAAX,CAAkB2B,MAArC,EAA4C;AACxC,cAAGD,IAAI,CAACE,GAAL,KAAa,MAAhB,EAAuB;AACnBN,YAAAA,QAAQ,GAAG,IAAX;AACAC,YAAAA,UAAU,CAACM,IAAX,CAAgB,WAAhB;AACH,WAHD,MAII;AACAN,YAAAA,UAAU,CAACM,IAAX,CAAgB,YAAhB;AACH;AACJ;AACJ,OAVD;AAWAf,MAAAA,YAAY,GAAG,MAAC,SAAD;AAAW,QAAA,MAAM,EAAI,KAAKU,KAAL,CAAWxB,MAAhC;AAAwC,QAAA,QAAQ,EAAI,KAAKwB,KAAL,CAAWvB;AAA/D,QAAf;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAY5B,KAAZ;AACH;;AACD,WACI;AAAK,MAAA,SAAS,EAAIoB,UAAU,CAACS,IAAX,CAAgB,GAAhB;AAAlB,OACMlB,YADN,CADJ;AAKH;;AApDuC;;AAsD5C,eAAejB,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport MatchData from './MatchData';\r\nclass SummonerMatch extends React.Component {\r\n    state ={\r\n        personID: null,\r\n        person: null,\r\n        champion: null\r\n    }    \r\n    componentDidMount(){\r\n        const { match, summonerID } = this.props;\r\n        let personID = null;\r\n        let champion = null;\r\n        match.participantIdentities.map((person) =>{\r\n            if(person.player.accountId === summonerID){\r\n                personID = person.participantId;\r\n            }\r\n        })\r\n        let champID = match.participants[personID - 1].championId;\r\n        const championData = this.props.matchData;\r\n\r\n        Object.keys(championData).forEach((champ)=>{\r\n            const champLoopID = championData[champ].key;\r\n            if(parseInt(champLoopID) === parseInt(champID)){\r\n                champion = championData[champ];\r\n                return;\r\n            }\r\n        })\r\n        this.setState({ personID: personID, person: match.participants[personID - 1],champion: champion })\r\n    }\r\n    render(){\r\n        const { match, summonerID } = this.props;\r\n        let matchWon = false;\r\n        let matchClass = ['match'];\r\n        let championData = null;\r\n        if(this.state.person !== null){\r\n            match.teams.forEach((team) => {\r\n                if(team.teamId === this.state.person.teamId){\r\n                    if(team.win !== 'Fail'){\r\n                        matchWon = true;\r\n                        matchClass.push('match-won');\r\n                    }\r\n                    else{\r\n                        matchClass.push('match-lost');\r\n                    }\r\n                }\r\n            })\r\n            championData = <MatchData person = {this.state.person} champion = {this.state.champion} />\r\n            console.log(match);\r\n        }\r\n        return(\r\n            <div className = {matchClass.join(' ')}>\r\n                 {championData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SummonerMatch;"]},"metadata":{},"sourceType":"module"}