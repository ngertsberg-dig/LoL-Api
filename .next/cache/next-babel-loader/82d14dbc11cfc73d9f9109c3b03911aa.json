{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport ChampionData from './champion-data/ChampionData';\n\nvar SummonerMatch =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SummonerMatch, _React$Component);\n\n  function SummonerMatch() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SummonerMatch);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SummonerMatch)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      personID: null,\n      person: null,\n      champion: null\n    });\n\n    return _this;\n  }\n\n  _createClass(SummonerMatch, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          match = _this$props.match,\n          summonerID = _this$props.summonerID;\n      var personID = null;\n      var champion = null;\n      match.participantIdentities.map(function (person) {\n        if (person.player.accountId === summonerID) {\n          personID = person.participantId;\n        }\n      });\n      var champID = match.participants[personID - 1].championId;\n      var championData = this.props.championData;\n\n      _Object$keys(this.props.championData).forEach(function (champ) {\n        var champLoopID = championData[champ].key;\n\n        if (_parseInt(champLoopID) === _parseInt(champID)) {\n          champion = championData[champ];\n          return;\n        }\n      });\n\n      this.setState({\n        personID: personID,\n        person: match.participants[personID - 1],\n        champion: champion\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          match = _this$props2.match,\n          summonerID = _this$props2.summonerID;\n      var matchWon = false;\n      var matchClass = ['match'];\n      var championData = null;\n\n      if (this.state.person !== null) {\n        match.teams.forEach(function (team) {\n          if (team.teamId === _this2.state.person.teamId) {\n            if (team.win !== 'Fail') {\n              matchWon = true;\n              matchClass.push('match-won');\n            } else {\n              matchClass.push('match-lost');\n            }\n          }\n        });\n        championData = __jsx(ChampionData, {\n          champion: this.state.champion\n        });\n      }\n\n      return __jsx(\"div\", {\n        className: matchClass.join(' ')\n      }, championData);\n    }\n  }]);\n\n  return SummonerMatch;\n}(React.Component);\n\nexport default SummonerMatch;","map":{"version":3,"sources":["/home/vagrant/apps/league/components/summoner-profile/SummonerMatch.js"],"names":["React","useState","ChampionData","SummonerMatch","personID","person","champion","props","match","summonerID","participantIdentities","map","player","accountId","participantId","champID","participants","championId","championData","forEach","champ","champLoopID","key","setState","matchWon","matchClass","state","teams","team","teamId","win","push","join","Component"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;IACMC,a;;;;;;;;;;;;;;;;;;4DACK;AACHC,MAAAA,QAAQ,EAAE,IADP;AAEHC,MAAAA,MAAM,EAAE,IAFL;AAGHC,MAAAA,QAAQ,EAAE;AAHP,K;;;;;;;wCAOY;AAAA,wBACe,KAAKC,KADpB;AAAA,UACPC,KADO,eACPA,KADO;AAAA,UACAC,UADA,eACAA,UADA;AAEf,UAAIL,QAAQ,GAAG,IAAf;AACA,UAAIE,QAAQ,GAAG,IAAf;AACAE,MAAAA,KAAK,CAACE,qBAAN,CAA4BC,GAA5B,CAAgC,UAACN,MAAD,EAAW;AACvC,YAAGA,MAAM,CAACO,MAAP,CAAcC,SAAd,KAA4BJ,UAA/B,EAA0C;AACtCL,UAAAA,QAAQ,GAAGC,MAAM,CAACS,aAAlB;AACH;AACJ,OAJD;AAKA,UAAIC,OAAO,GAAGP,KAAK,CAACQ,YAAN,CAAmBZ,QAAQ,GAAG,CAA9B,EAAiCa,UAA/C;AATe,UAUPC,YAVO,GAUU,KAAKX,KAVf,CAUPW,YAVO;;AAYf,mBAAY,KAAKX,KAAL,CAAWW,YAAvB,EAAqCC,OAArC,CAA6C,UAACC,KAAD,EAAS;AAClD,YAAMC,WAAW,GAAGH,YAAY,CAACE,KAAD,CAAZ,CAAoBE,GAAxC;;AACA,YAAG,UAASD,WAAT,MAA0B,UAASN,OAAT,CAA7B,EAA+C;AAC3CT,UAAAA,QAAQ,GAAGY,YAAY,CAACE,KAAD,CAAvB;AACA;AACH;AACJ,OAND;;AAOA,WAAKG,QAAL,CAAc;AAAEnB,QAAAA,QAAQ,EAAEA,QAAZ;AAAsBC,QAAAA,MAAM,EAAEG,KAAK,CAACQ,YAAN,CAAmBZ,QAAQ,GAAG,CAA9B,CAA9B;AAA+DE,QAAAA,QAAQ,EAAEA;AAAzE,OAAd;AACH;;;6BACO;AAAA;;AAAA,yBAC0B,KAAKC,KAD/B;AAAA,UACIC,KADJ,gBACIA,KADJ;AAAA,UACWC,UADX,gBACWA,UADX;AAEJ,UAAIe,QAAQ,GAAG,KAAf;AACA,UAAIC,UAAU,GAAG,CAAC,OAAD,CAAjB;AACA,UAAIP,YAAY,GAAG,IAAnB;;AACA,UAAG,KAAKQ,KAAL,CAAWrB,MAAX,KAAsB,IAAzB,EAA8B;AAC1BG,QAAAA,KAAK,CAACmB,KAAN,CAAYR,OAAZ,CAAoB,UAACS,IAAD,EAAU;AAC1B,cAAGA,IAAI,CAACC,MAAL,KAAgB,MAAI,CAACH,KAAL,CAAWrB,MAAX,CAAkBwB,MAArC,EAA4C;AACxC,gBAAGD,IAAI,CAACE,GAAL,KAAa,MAAhB,EAAuB;AACnBN,cAAAA,QAAQ,GAAG,IAAX;AACAC,cAAAA,UAAU,CAACM,IAAX,CAAgB,WAAhB;AACH,aAHD,MAII;AACAN,cAAAA,UAAU,CAACM,IAAX,CAAgB,YAAhB;AACH;AACJ;AACJ,SAVD;AAWAb,QAAAA,YAAY,GAAG,MAAC,YAAD;AAAc,UAAA,QAAQ,EAAI,KAAKQ,KAAL,CAAWpB;AAArC,UAAf;AACH;;AACD,aACI;AAAK,QAAA,SAAS,EAAImB,UAAU,CAACO,IAAX,CAAgB,GAAhB;AAAlB,SACMd,YADN,CADJ;AAKH;;;;EArDuBlB,KAAK,CAACiC,S;;AAuDlC,eAAe9B,aAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport ChampionData from './champion-data/ChampionData';\r\nclass SummonerMatch extends React.Component {\r\n    state ={\r\n        personID: null,\r\n        person: null,\r\n        champion: null\r\n    }    \r\n\r\n\r\n    componentDidMount(){\r\n        const { match, summonerID } = this.props;\r\n        let personID = null;\r\n        let champion = null;\r\n        match.participantIdentities.map((person) =>{\r\n            if(person.player.accountId === summonerID){\r\n                personID = person.participantId;\r\n            }\r\n        })\r\n        let champID = match.participants[personID - 1].championId;\r\n        const { championData } = this.props;\r\n\r\n        Object.keys(this.props.championData).forEach((champ)=>{\r\n            const champLoopID = championData[champ].key;\r\n            if(parseInt(champLoopID) === parseInt(champID)){\r\n                champion = championData[champ];\r\n                return;\r\n            }\r\n        })\r\n        this.setState({ personID: personID, person: match.participants[personID - 1],champion: champion })\r\n    }\r\n    render(){\r\n        const { match, summonerID } = this.props;\r\n        let matchWon = false;\r\n        let matchClass = ['match'];\r\n        let championData = null;\r\n        if(this.state.person !== null){\r\n            match.teams.forEach((team) => {\r\n                if(team.teamId === this.state.person.teamId){\r\n                    if(team.win !== 'Fail'){\r\n                        matchWon = true;\r\n                        matchClass.push('match-won');\r\n                    }\r\n                    else{\r\n                        matchClass.push('match-lost');\r\n                    }\r\n                }\r\n            })\r\n            championData = <ChampionData champion = {this.state.champion} />\r\n        }\r\n        return(\r\n            <div className = {matchClass.join(' ')}>\r\n                 {championData}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SummonerMatch;"]},"metadata":{},"sourceType":"module"}